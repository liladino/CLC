Date:   Aug 26 2024
	Hashing:
		During hashing the position is now accessed via a pointer 

Date:   Aug 23 2024
	FEN input:
		if the move counters aren't present, it printed out a message twice. The message was unnecesary, so now it doesn't print anything
	SAN input:
		fixed the bug where the move is considered invalid, if it is in the form of for example N6xe5 (taking and the rank is specified)
	eval:
		pawn is slightly changed, now it heavily favors going forward in the endgame

Date:   Aug 22 2024
	PV:
		Now the best line seems to be working

Date:   Aug 21 2024
	TT:
		Less buggy, but I'm not impressed with it, as it doesn't really help much with the speed and depth reached.
		Turns out i messed up something agian, tomorrow ill look at it again.
	PV:
		still faulty at times, not sure why

Date:   Aug 20 2024
	Best line:
		renamed to be principal variation, as it is it's standard name. Also fixed bugs with it, now it should print the moves correctly.
		Fixed a bug, where if the line ends shorter than the max depth, a faulty move can occur (e.g. one side is already checkmated)
	TT:
		still buggy, so currently not working. 

Date:   Sun Aug 18 15:33:15 2024 +0200
	Added time limits: 
		The search is 4 plyes minimum, and extends indefinetly, while it is within the limits of thinking time.
		SIGALRM is used to achieve this.
		
		Might change this later to actually cut the tree search if the time is up, not necceseraly after one finished search.
		
	TransTable elements shortened:
		Now doesn't contain the next position's hash or the best move, just the current hash, the evaluation and the flag.
		A new flag added, that signals that it was the best move in the last search. This ensures, that the next search begins with this move
		
		BUGS, BUGS, EVERYEHRE
		Somehow i messed up mates, and now the easy endgames arent as easy, because the TT gives faulty results regarding mates.
		
	Eval:
		changed the king slightly to make it's position less relevant for the attacking side
		There is something going on with it tho, as sometimes it says a king - king+rook position is sometimes better for the empty king
	
	Best line:
		I'm too tired to debug this, or to even be sure this works, it's just there, hoping to be used.
		


Date:   Wed Feb 28 19:13:10 2024 +0100

    Fixed fen input bug
    
    It never read the halfmove and the move counter, because i forgot how sscanf works :((
    
    Toggled one - to + in the engine, because it may have misinterpreted some positions, where there are multiple mates with different lengths, and it wouldn't found the shortest.
    
    Changed the formatting of printmove to represent the more often used format with no spaces, and only lowercase letters.
    e.g. e7 e8 Q => e7e8q



Date:   Thu Feb 22 23:08:59 2024 +0100
    Written the move ordering function
    
    not implemented yet, as it may needs some xtra care.
    There are a lot of collisions in the hash table, which is,
    at the moment 1 Mb. I tried varying the seed, and it does
    seem like the case is slightly nicer, but we need to be
    careful anyways. The logic was a bit messy at first because
    of this not using a pure minimax search, but maybe now it is right.



Date:   Mon Feb 19 19:38:59 2024 +0100

    Fixed undo bug
    
    When a move was undone, and it was played again, the eval immediately
    returned the eval froom hash without setting the next move. Now this
    was no problem if only one move was undone, because it remained in
    the global variable, but when multiple, it made a move that was
    basically memory junk in that pos.



Date:   Sun Feb 18 21:36:30 2024 +0100

    Started working on iterative deepening now



Date:   Sun Feb 18 20:46:13 2024 +0100

    Hashing bug fixed
    
    I messed up the brackets with TableSize, so it didn't write
    hashkey % Tablesize, but rather
    hashkey % 1 * 1024 * 1024 / sizeof(hashelement)
